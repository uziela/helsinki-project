#! /usr/bin/Rscript 

source("/triton/ics/scratch/uzielak1/general_scripts/my_plot.R")
cargs <- commandArgs(trailingOnly = TRUE)

output_dir <- cargs[1]
mode <- cargs[2]
merged_files <- cargs # all merged_with_rma.RData files

prebs_cors1 <- NULL
prebs_cors2 <- NULL
prebs_cors3 <- NULL
mmseq_cors <- NULL
rpkm_cors <- NULL

prebs_raw_cors <- NULL
mmseq_raw_cors <- NULL

for (i in 3:length(merged_files)) {
	load(merged_files[i])
	
	sample_name <- strsplit(merged_files[i], "/")
	sample_name <- sample_name[[1]][2]
	
	if (mode == "DIFFERENT") {
		merged_filtered <- merged_with_rma[is.finite(merged_with_rma$PREBS_median),]
		#merged_filtered$PREBS_median <- log2(2^merged_filtered$PREBS_median + runif(length(merged_filtered$PREBS_median)))
		prebs_cors1 <- c(prebs_cors1, cor(merged_filtered$PREBS_median, merged_filtered$array_expr))
		my_plot(merged_filtered$PREBS_median, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_median_vs_array.png", sep=""), "PREBS_median value", "Microarray expression")
	
		merged_filtered <- merged_with_rma[is.finite(merged_with_rma$PREBS_mean),]
		prebs_cors2 <- c(prebs_cors2, cor(merged_filtered$PREBS_mean, merged_filtered$array_expr))
		prebs_raw_cors <- c(prebs_raw_cors, cor(merged_filtered$PREBS_mean, merged_filtered$Probes_mean_raw))
		my_plot(merged_filtered$PREBS_mean, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_mean_vs_array.png", sep=""), "PREBS_mean value", "Microarray expression")

		merged_filtered <- merged_with_rma
		#merged_filtered <- merged_with_rma[merged_with_rma$PREBS_RMA>-2.07,]
		#merged_filtered <- merged_with_rma[merged_with_rma$PREBS_RMA>0,]
		prebs_cors3 <- c(prebs_cors3, cor(merged_filtered$PREBS_RMA, merged_filtered$array_expr))
		my_plot(merged_filtered$PREBS_RMA, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_RMA_vs_array.png", sep=""), "PREBS_RMA value", "Microarray expression")
		#my_plot(rank(merged_filtered$PREBS_RMA), rank(merged_filtered$array_expr), paste(output_dir,"/plots/",sample_name,"_PREBS_RMA_vs_array_copula.png", sep=""), "PREBS_RMA value", "Microarray expression")
		#my_plot(rank(merged_filtered$PREBS_RMA, ties.method="random"), rank(merged_filtered$array_expr, ties.method="random"), paste(output_dir,"/plots/",sample_name,"_PREBS_RMA_vs_array_copula_rand.png", sep=""), "PREBS_RMA value", "Microarray expression")
	
		merged_filtered <- merged_with_rma[!is.na(merged_with_rma$mmseq_expr),]
		merged_filtered <- merged_filtered[merged_filtered$mmseq_expr >= log2(0.3),]
		mmseq_cors <- c(mmseq_cors, cor(merged_filtered$mmseq_expr, merged_filtered$array_expr))
		mmseq_raw_cors <- c(mmseq_raw_cors, cor(merged_filtered$mmseq_expr, merged_filtered$Probes_mean_raw))
		my_plot(merged_filtered$mmseq_expr, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_mmseq_vs_array.png", sep=""), "MMseq expression (log2 scale)", "Microarray expression")
	
		#merged_filtered <- merged_with_rma[merged_with_rma$RPKM >= log2(0.3),]
		merged_filtered <- merged_with_rma[!is.na(merged_with_rma$RPKM ),]
		rpkm_cors  <- c(rpkm_cors, cor(merged_filtered$RPKM, merged_filtered$array_expr))
		my_plot(merged_filtered$RPKM, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_RPKM_vs_array.png", sep=""), "RPKM (log2 scale)", "Microarray expression")
	} else if (mode == "SAME") {
		merged_filtered <- merged_with_rma
		#merged_filtered <- merged_with_rma[is.finite(merged_with_rma$PREBS_median),]
		#merged_filtered <- merged_filtered[is.finite(merged_filtered$PREBS_mean),]
		merged_filtered <- merged_filtered[!is.na(merged_filtered$mmseq_expr),]
		merged_filtered <- merged_filtered[!is.na(merged_filtered$RPKM),]
		merged_filtered <- merged_filtered[merged_filtered$mmseq_expr >= log2(0.3),]
		
		prebs_cors1 <- c(prebs_cors1, cor(merged_filtered$PREBS_median, merged_filtered$array_expr))
		my_plot(merged_filtered$PREBS_median, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_median_vs_array.png", sep=""), "PREBS_median value", "Microarray expression")
		
		prebs_cors2 <- c(prebs_cors2, cor(merged_filtered$PREBS_mean, merged_filtered$array_expr))
		prebs_raw_cors <- c(prebs_raw_cors, cor(merged_filtered$PREBS_mean, merged_filtered$Probes_mean_raw))
		my_plot(merged_filtered$PREBS_mean, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_mean_vs_array.png", sep=""), "PREBS_mean value", "Microarray expression")

		prebs_cors3 <- c(prebs_cors3, cor(merged_filtered$PREBS_RMA, merged_filtered$array_expr))
		my_plot(merged_filtered$PREBS_RMA, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_RMA_vs_array.png", sep=""), "PREBS_RMA value", "Microarray expression")
	
		mmseq_cors <- c(mmseq_cors, cor(merged_filtered$mmseq_expr, merged_filtered$array_expr))
		mmseq_raw_cors <- c(mmseq_raw_cors, cor(merged_filtered$mmseq_expr, merged_filtered$Probes_mean_raw))
		my_plot(merged_filtered$mmseq_expr, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_mmseq_vs_array.png", sep=""), "MMseq expression (log2 scale)", "Microarray expression")
	
		rpkm_cors  <- c(rpkm_cors, cor(merged_filtered$RPKM, merged_filtered$array_expr))
		my_plot(merged_filtered$RPKM, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_RPKM_vs_array.png", sep=""), "RPKM (log2 scale)", "Microarray expression")	
	}
	
}

prebs_table <- data.frame(RPKM=round(rpkm_cors,2), mmseq=round(mmseq_cors,2), PREBS_median=round(prebs_cors1,2), PREBS_mean=round(prebs_cors2,2), PREBS_RMA=round(prebs_cors3,2), Improvement1=(100 * round((prebs_cors1 - mmseq_cors) / (1-mmseq_cors),4)), Improvement2=(100 * round((prebs_cors2 - mmseq_cors) / (1-mmseq_cors),4)), Improvement3=(100 * round((prebs_cors3 - mmseq_cors) / (1-mmseq_cors),4)))
print(prebs_table)

print("")
print(paste("Average PREBS_median correlation with microarray:", round(mean(prebs_cors1),2)))
print(paste("Average PREBS_mean correlation with microarray:", round(mean(prebs_cors2),2)))
print(paste("Average PREBS_RMA correlation with microarray:", round(mean(prebs_cors3),2)))
print(paste("Average mmseq correlation with microarray:", round(mean(mmseq_cors),2)))
print(paste("Average RPKM correlation with microarray:", round(mean(rpkm_cors),2)))

print("")
print(paste("Average PREBS_mean correlation with microarray (no RMA):", round(mean(prebs_raw_cors),2)))
print(paste("Average mmseq correlation with microarray (no RMA):", round(mean(mmseq_raw_cors),2)))

improve1 <- 100 * round((mean(prebs_cors1) - mean(mmseq_cors)) / (1-mean(mmseq_cors)),4)
improve2 <- 100 * round((mean(prebs_cors2) - mean(mmseq_cors)) / (1-mean(mmseq_cors)),4)
improve3 <- 100 * round((mean(prebs_cors3) - mean(mmseq_cors)) / (1-mean(mmseq_cors)),4)

improve_rpkm1 <- 100 * round((mean(prebs_cors1) - mean(rpkm_cors)) / (1-mean(rpkm_cors)),4)
improve_rpkm2 <- 100 * round((mean(prebs_cors2) - mean(rpkm_cors)) / (1-mean(rpkm_cors)),4)
improve_rpkm3 <- 100 * round((mean(prebs_cors3) - mean(rpkm_cors)) / (1-mean(rpkm_cors)),4)

print("")
print(paste("Compared to mmseq, PREBS_median improves the correlation on average by: ", improve1," %", sep=""))
print(paste("Compared to mmseq, PREBS_mean improves the correlation on average by: ", improve2," %", sep=""))
print(paste("Compared to mmseq, PREBS_RMA improves the correlation on average by: ", improve3," %", sep=""))
print("")
print(paste("Compared to RPKM, PREBS_median improves the correlation on average by: ", improve_rpkm1," %", sep=""))
print(paste("Compared to RPKM, PREBS_mean improves the correlation on average by: ", improve_rpkm2," %", sep=""))
print(paste("Compared to RPKM, PREBS_RMA improves the correlation on average by: ", improve_rpkm3," %", sep=""))

