#! /usr/bin/Rscript 

source("/triton/ics/scratch/uzielak1/general_scripts/my_plot.R")
cargs <- commandArgs(trailingOnly = TRUE)

output_dir <- cargs[1]
threshold <- log2(as.numeric(cargs[2]))
array_quantile <- as.numeric(cargs[3])
merged_files <- cargs # all merged_with_rma.RData files

prebs_cors1 <- NULL
mmseq_cors1 <- NULL
rpkm_cors1 <- NULL

prebs_cors2 <- NULL
mmseq_cors2 <- NULL
rpkm_cors2 <- NULL

prebs_raw_cors <- NULL
mmseq_raw_cors <- NULL

#threshold <- log2(0.6)

for (i in 4:length(merged_files)) {
	load(merged_files[i])
	
	sample_name <- strsplit(merged_files[i], "/")
	sample_name <- sample_name[[1]][2]
	
	
	merged_filtered <- merged_with_rma
	merged_filtered <- merged_filtered[!is.na(merged_filtered$mmseq_expr),]
	merged_filtered <- merged_filtered[!is.na(merged_filtered$RPKM),]	
	#merged_filtered <- merged_filtered[merged_filtered$mmseq_expr > threshold,]
	#merged_filtered <- merged_filtered[merged_filtered$RPKM > threshold,]
	#merged_filtered <- merged_filtered[merged_filtered$PREBS_RMA > threshold,]
	merged_filtered <- merged_filtered[merged_filtered$array_expr >= quantile(merged_filtered$array_expr, array_quantile),]
	
	#merged_filtered[is.na(merged_filtered$mmseq_expr),]$mmseq_expr <- threshold
	#merged_filtered[is.na(merged_filtered$RPKM),]$RPKM <- threshold
	merged_filtered[merged_filtered$mmseq_expr < threshold,]$mmseq_expr <- threshold
	merged_filtered[merged_filtered$RPKM < threshold,]$RPKM <- threshold
	
	prebs_cors1 <- c(prebs_cors1, cor(merged_filtered$PREBS_RMA, merged_filtered$array_expr))
	prebs_cors2 <- c(prebs_cors2, cor(merged_filtered$PREBS_RMA, merged_filtered$array_expr, method="spearman"))
	my_plot(merged_filtered$PREBS_RMA, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_PREBS_RMA_vs_array.png", sep=""), "PREBS_RMA value", "Microarray expression")

	mmseq_cors1 <- c(mmseq_cors1, cor(merged_filtered$mmseq_expr, merged_filtered$array_expr))
	mmseq_cors2 <- c(mmseq_cors2, cor(merged_filtered$mmseq_expr, merged_filtered$array_expr, method="spearman"))
	mmseq_raw_cors <- c(mmseq_raw_cors, cor(merged_filtered$mmseq_expr, merged_filtered$Probes_mean_raw))
	my_plot(merged_filtered$mmseq_expr, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_mmseq_vs_array.png", sep=""), "MMseq expression (log2 scale)", "Microarray expression")

	rpkm_cors1  <- c(rpkm_cors1, cor(merged_filtered$RPKM, merged_filtered$array_expr))
	rpkm_cors2  <- c(rpkm_cors2, cor(merged_filtered$RPKM, merged_filtered$array_expr, method="spearman"))
	my_plot(merged_filtered$RPKM, merged_filtered$array_expr, paste(output_dir,"/plots/",sample_name,"_RPKM_vs_array.png", sep=""), "RPKM (log2 scale)", "Microarray expression")	
	
	
}

print("Pearson correlations")
prebs_table <- data.frame(RPKM=round(rpkm_cors1,2), mmseq=round(mmseq_cors1,2), PREBS_RMA=round(prebs_cors1,2), Improvement=(100 * round((prebs_cors1 - mmseq_cors1) / (1-mmseq_cors1),4)))
print(prebs_table)

print("")
print(paste("Average PREBS_RMA correlation with microarray:", round(mean(prebs_cors1),2)))
print(paste("Average mmseq correlation with microarray:", round(mean(mmseq_cors1),2)))
print(paste("Average RPKM correlation with microarray:", round(mean(rpkm_cors1),2)))

improve1 <- 100 * round((mean(prebs_cors1) - mean(mmseq_cors1)) / (1-mean(mmseq_cors1)),4)

improve_rpkm1 <- 100 * round((mean(prebs_cors1) - mean(rpkm_cors1)) / (1-mean(rpkm_cors1)),4)

print("")
print(paste("Compared to mmseq, PREBS_RMA improves the correlation on average by: ", improve1," %", sep=""))
print(paste("Compared to RPKM, PREBS_RMA improves the correlation on average by: ", improve_rpkm1," %", sep=""))

print("")
print("")
print("--------------------")
print("")
print("")
print("Spearman correlations")
prebs_table <- data.frame(RPKM=round(rpkm_cors2,2), mmseq=round(mmseq_cors2,2), PREBS_RMA=round(prebs_cors2,2), Improvement=(100 * round((prebs_cors2 - mmseq_cors2) / (1-mmseq_cors2),4)))
print(prebs_table)

print("")
print(paste("Average PREBS_RMA correlation with microarray:", round(mean(prebs_cors2),2)))
print(paste("Average mmseq correlation with microarray:", round(mean(mmseq_cors2),2)))
print(paste("Average RPKM correlation with microarray:", round(mean(rpkm_cors2),2)))

improve2 <- 100 * round((mean(prebs_cors2) - mean(mmseq_cors2)) / (1-mean(mmseq_cors2)),4)

improve_rpkm2 <- 100 * round((mean(prebs_cors2) - mean(rpkm_cors2)) / (1-mean(rpkm_cors2)),4)

print("")
print(paste("Compared to mmseq, PREBS_RMA improves the correlation on average by: ", improve2," %", sep=""))
print(paste("Compared to RPKM, PREBS_RMA improves the correlation on average by: ", improve_rpkm2," %", sep=""))

